# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/hardware/network/broadcom-43xx.nix")
      (modulesPath + "/installer/scan/not-detected.nix")
    ];


  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usbhid" "usb_storage" "sd_mod" "applespi" "spi_pxa2xx_platform" "intel_lpss_pci" "applesmc" "apple-ib-tb" "apple-ibridge" "apple-ib-als" ];
  boot.initrd.kernelModules = [ ];
  # boot.initrd.systemd.enable = true;
  boot.kernelModules = [ "kvm-intel" ];
  # boot.extraModulePackages = [  ];
  # boot.kernelParams = [ "brcmfmac.feature_disable=0x82000" "brcmfmac.roamoff=1" ];

  boot.extraModulePackages = [
    (import /home/esod/drivers/touchbar.nix {
      stdenv = pkgs.stdenv; 
      lib = pkgs.lib;
      kernel = config.boot.kernelPackages.kernel; 
      fetchFromGitHub = pkgs.fetchFromGitHub; 
      buildPackages = pkgs.buildPackages; 
    })
  ];

  fileSystems."/" =
    { device = "zpool/root";
      fsType = "zfs";
      options = [ "zfsutil" ];
    };

  fileSystems."/nix" =
    { device = "zpool/nix";
      fsType = "zfs";
      options = [ "zfsutil" ];
    };

  fileSystems."/var" =
    { device = "zpool/var";
      fsType = "zfs";
      options = [ "zfsutil" ];
    };

  fileSystems."/home" =
    { device = "zpool/home";
      fsType = "zfs";
      options = [ "zfsutil" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/6E7C-A615";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-id/nvme-APPLE_SSD_SM1024L_C02749400PGHRFN15_1-part2";
    randomEncryption= true;
    }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
    boot.initrd.network = {
	    enable = true;
	    ssh = {
		    enable = true;
		    port = 2222;
		    hostKeys = [ /etc/ssh/ssh_host_rsa_key ];
		    authorizedKeys = [ "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILEvF7PEBh7El5JdDfpG23V+phQctUK2k3jgZZWx7pX0 esod_ed25519" ];
	    };
    };
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s20f0u5.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
